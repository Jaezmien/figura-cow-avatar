-- TimerAPI.lua
-- By: KitCat962 + GNamimates
local a;pcall(function()a=require("EventsAPI")end)local b={TICK={},RENDER={},WORLD_TICK={},WORLD_RENDER={}}local c={}c.__index=c;function c:new(d,e,f,g,h,i)local j={time=e,duration=e,paused=not g,onFinish=h,onProcess=i,loop=not not f}if a then j.onFinishEvent=a:new()j.onProcessEvent=a:new()end;setmetatable(j,self)if b[d]then table.insert(b[d],j)else error("invalid type",2)end;return j end;function c:remove()self.removed=true end;function c:pause()self.paused=true end;function c:resume()self.paused=false end;function c:stop()self.paused=true;self.time=self.duration end;function c:play()self.paused=false;self.time=self.duration end;do local function k(l,m)for n=1,#l do local j=l[n]if j then if j.removed then table.remove(l,n)n=n-1;goto o end;if j.time<=0 then j.time=j.duration;j.paused=not j.loop;if j.onFinish then j.onFinish()end;if a then j.onFinishEvent:invoke()end end;if not j.paused then j.time=math.max(j.time-m,0)local p=(j.duration-j.time)/j.duration,m;if j.onProcess then j.onProcess(p)end;if a then j.onProcessEvent:invoke(p)end end end::o::end end;local q=events;q.TICK:register(function()k(b.TICK,1)end)q.WORLD_TICK:register(function()k(b.WORLD_TICK,1)end)local function r()return client:getSystemTime()end;local s=r()local t=r()q.RENDER:register(function()local m=(r()-s)/1000;s=r()k(b.RENDER,m)end)q.WORLD_RENDER:register(function()local m=(r()-t)/1000;t=r()k(b.WORLD_RENDER,m)end)end;return c